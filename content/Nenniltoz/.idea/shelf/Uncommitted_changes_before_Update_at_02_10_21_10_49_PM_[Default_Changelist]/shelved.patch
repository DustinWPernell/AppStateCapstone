Index: LifeCounter/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LifeCounter/views.py b/LifeCounter/views.py
new file mode 100644
--- /dev/null	(date 1613013876285)
+++ b/LifeCounter/views.py	(date 1613013876285)
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1613015384156)
+++ b/.idea/workspace.xml	(date 1613015384156)
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="a7a74ab4-1722-416f-9875-ece3f26ef8ad" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/Nenniltoz.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/admin.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/apps.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/migrations/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/models.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/tests.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/urls.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Admin/views.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/admin.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/apps.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/migrations/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/models.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/tests.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Collection/views.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/admin.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/apps.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/migrations/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/models.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/tests.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LifeCounter/views.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Nenniltoz/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Nenniltoz/asgi.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Nenniltoz/settings.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Nenniltoz/urls.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Nenniltoz/wsgi.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/admin.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/apps.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/migrations/__init__.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/models.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/tests.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/User/views.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/manage.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../KeywordInsert.txt" beforeDir="false" afterPath="$PROJECT_DIR$/../KeywordInsert.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../MTGdb.csv" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../MTGdb.xlsm" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../MTGdbBlank.xlsm" beforeDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="PUSH_AUTO_UPDATE" value="true" />
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
+  </component>
+  <component name="ProjectId" id="1oJoGLm0uVA2BwiOFidWs7ro6ru" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a7a74ab4-1722-416f-9875-ece3f26ef8ad" name="Default Changelist" comment="" />
+      <created>1613013958552</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1613013958552</updated>
+    </task>
+    <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ../KeywordInsert.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>INSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Deathtouch\", \"A keyword ability that causes damage dealt by an object to a creature to be enough to destroy it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Defender\",\"\",\"A keyword ability that prohibits a creature from attacking.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Double Strike\",\"A keyword ability that lets a creature deal both first-strike and regular combat damage.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Enchant\",\"A keyword ability that defines what an Aura spell can target and what an Aura permanent can be attached to.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Equip\",\"A keyword ability that lets a player attach an Equipment to a creature they control.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"First Strike\",\"A keyword ability that lets a creature deal its combat damage before other creatures.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Flash\",\"A keyword ability that lets a player play a card any time they could cast an instant.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Flying\",\"A keyword ability that restricts how a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Haste\",\"A keyword ability that lets a creature ignore the \\“summoning sickness\\” rule. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Indestructible\",\"A keyword ability that precludes a permanent from being destroyed.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Hexproof\",\"A keyword ability that precludes a permanent or player from being targeted by an opponent.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Intimidate\",\"A keyword ability that restricts how a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Landwalk\",\"A generic term for a group of keyword abilities that restrict whether a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Lifelink\",\"A keyword ability that causes a player to gain life.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Protection\",\"A keyword ability that provides a range of benefits against objects with a specific quality.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Reach\",\"A keyword ability that allows a creature to block an attacking creature with flying.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Shroud\",\"A keyword ability that precludes a permanent or player from being targeted. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Trample\",\"A keyword ability that modifies how a creature assigns combat damage.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Vigilance\",\"A keyword ability that lets a creature attack without tapping.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Banding\",\"A keyword ability that modifies the rules for declaring attackers and assigning combat damage. “Bands with other” is a specialized version of the ability.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Rampage\",\"A keyword ability that can make a creature better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Cumulative Upkeep\",\"A keyword ability that imposes an increasing cost to keep a permanent on the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Flanking\",\"A keyword ability that can make a creature better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Phasing\",\"A keyword ability that causes a permanent to sometimes be treated as though it does not exist.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Buyback\",\"A keyword ability of instants and sorceries that can let the spell return to its owner’s hand as it resolves.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Shadow\",\"A keyword ability that restricts how a creature may be blocked and which creatures it can block.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Cycling\",\"A keyword ability that lets a card be discarded and replaced with a new card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Echo\",\"A keyword ability that imposes a cost to keep a permanent on the battlefield. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Horsemanship\",\"A keyword ability that restricts how a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Fading\",\"A keyword ability that limits how long a permanent remains on the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Kicker\",\"Kicker is a keyword ability that represents an optional additional cost. A spell has been kicked if its controller declared the intention to pay any or all of its kicker costs.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Flashback\",\"A keyword ability that lets a player cast a card from their graveyard.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Madness\",\"A keyword ability that lets a player cast a card they discard.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Fear\",\"A keyword ability that restricts how a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Morph\",\"A keyword ability that lets a card be cast face down as a 2/2 creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Amplify\",\"A keyword ability than can have a creature enter the battlefield with +1/+1 counters on it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Provoke\",\"A keyword ability that can force a creature to block.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Storm\",\"A keyword ability that creates copies of a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Affinity\",\"A keyword ability that reduces how much mana you need to spend to cast a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Entwine\",\"A keyword ability that lets a player choose all modes for a spell rather than just the number specified.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Sunburst\",\"A keyword ability that can have a permanent enter the battlefield with +1/+1 counters or charge counters on it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Modular\",\"A keyword ability that has a permanent enter the battlefield with +1/+1 counters on it and can move those counters to other artifact creatures.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Soulshift\",\"A keyword ability that lets a player return a card from their graveyard to their hand.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Bushido\",\"A keyword ability that can make a creature better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Splice\",\"A keyword ability that lets a player add a card\\’s rules text onto another spell. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Offering\",\"A keyword ability that modifies when you can cast a spell and how much mana you need to spend to do it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Ninjutsu\",\"A keyword ability that lets a creature suddenly enter combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Epic\",\"A keyword ability that lets a player copy a spell at the beginning of each of their upkeeps at the expense of casting any other spells for the rest of the game.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Convoke\",\"A keyword ability that lets you tap creatures rather than pay mana to cast a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Dredge\",\"A keyword ability that lets a player return a card from their graveyard to their hand.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Transmute\",\"A keyword ability that lets a player search their library for a replacement card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Bloodthirst\",\"A keyword ability that can have a creature enter the battlefield with +1/+1 counters on it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Haunt\",\"A keyword ability that exiles cards. A card exiled this way “haunts” a creature targeted by the haunt ability.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Replicate\",\"A keyword ability that creates copies of a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Forecast\",\"A keyword ability that allows an activated ability to be activated from a player’s hand.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Graft\",\"A keyword ability that has a permanent enter the battlefield with +1/+1 counters on it and can move those counters to other creatures.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Recover\",\"A keyword ability that lets a player return a card from their graveyard to their hand.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Ripple\",\"A keyword ability that may let a player cast extra cards from their library for no cost.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Split Second\",\"A keyword ability that makes it nearly impossible for a player to respond to a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Suspend\",\"A keyword ability that provides an alternative way to play a card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Vanishing\",\"A keyword ability that limits how long a permanent remains on the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Absorb\",\"A keyword ability that prevents damage.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Aura Swap\",\"A keyword ability that lets you exchange an Aura on the battlefield with one in your hand.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Delve\",\"A keyword ability that lets you exile cards from your graveyard rather than pay generic mana to cast a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Fortify\",\"A keyword ability that lets a player attach a Fortification to a land they control.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Frenzy\",\"A keyword ability that can make a creature better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Gravestorm\",\"A keyword ability that creates copies of a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Poisonous\",\"A keyword ability that causes a player to get poison counters.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Transfigure\",\"A keyword ability that lets a player search their library for a replacement creature card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Champion\",\"A keyword ability that lets one creature temporarily replace another. A permanent is “championed” by another permanent if the latter exiles the former as the direct result of a champion ability.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Changeling\",\"A characteristic-defining ability that grants the object it’s on every creature type.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Evoke\",\"A keyword ability that causes a permanent to be sacrificed when it enters the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Hideaway\",\"A keyword ability that lets a player store a secret card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Prowl\",\"A keyword ability that may allow a spell to be cast for an alternative cost. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Reinforce\",\"A keyword ability that lets a player put +1/+1 counters on a creature. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Conspire\",\"A keyword ability that creates a copy of a spell. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Persist\",\"A keyword ability that can return a creature from the graveyard to the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Wither\",\"A keyword ability that affects how an object deals damage to a creature. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Retrace\",\"A keyword ability that lets a player cast a card from their graveyard.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Devour\",\"A keyword ability that can have a creature enter the battlefield with +1/+1 counters on it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Exalted\",\"A keyword ability that can make a creature better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Unearth\",\"A keyword ability that lets a player return a creature card from their graveyard to the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Cascade\",\"A keyword ability that may let a player cast a random extra spell for no cost. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Annihilator\",\"A keyword ability that can make a creature particularly brutal when it attacks.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Level Up\",\"A keyword ability that can put level counters on a creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Rebound\",\"A keyword ability that allows an instant or sorcery spell to be cast a second time.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Totem Armor\",\"A keyword ability that allows an Aura to protect the permanent it’s enchanting.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Infect\",\"A keyword ability that affects how an object deals damage to creatures and players.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Battle Cry\",\"A keyword ability that makes other attacking creatures better in combat.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Living Weapon\",\"A keyword ability that creates a creature token and then attaches the Equipment with the ability to that token.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Undying\",\"A keyword ability that can return a creature from the graveyard to the battlefield.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Miracle\",\"A keyword ability that lets you cast a spell for a reduced cost if it\\’s the first card you draw in a turn.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Soulbond\",\"A keyword ability that makes creatures better by pairing them together.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Overload\",\"A keyword ability that allows a spell to affect either a single target or many objects.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Scavenge\",\"A keyword ability that allows you to exile a creature card from your graveyard to put +1/+1 counters on a creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Unleash\",\"A keyword ability that allows a creature to enter the battlefield with a +1/+1 counter on it and stops it from blocking if it has a +1/+1 counter on it.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Cipher\",\"A keyword ability that allows you to encode a card on a creature and cast that card whenever that creature deals combat damage to a player.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Evolve\",\"A keyword ability that lets you put a +1/+1 counter on a creature when a larger creature enters the battlefield under your control.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Extort\",\"A keyword ability that lets you gain life and have opponents lose life whenever you cast a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Fuse\",\"A keyword ability that allows a player to cast both halves of a split card. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Bestow\",\"A keyword ability that lets a creature card be cast as an Aura.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Tribute\",\"A keyword ability that allows an opponent to choose between a creature entering the battlefield with +1/+1 counters or an additional ability.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Dethrone\",\"A keyword ability that puts a +1/+1 counter on a creature when it attacks the player with the most life.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Hidden Agenda\",\"A keyword ability that allows a conspiracy card to be put into the command zone face down.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Outlast\",\"A keyword ability that allows a creature to grow larger over time.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Prowess\",\"A keyword ability that causes a creature to get +1/+1 whenever its controller casts a noncreature spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Dash\",\"A keyword ability that allows creatures to be especially aggressive.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Exploit\",\"A keyword ability that lets you sacrifice a creature for a benefit.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Menace\",\"An evasion ability that makes creatures unblockable by a single creature. \");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Renown\",\"A keyword ability that makes a creature stronger after it deals combat damage to a player.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Awaken\",\"A keyword ability that lets you turn a land you control into a creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Devoid\",\"A characteristic-defining ability that makes an object colorless.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Ingest\",\"A keyword ability that can exile the top card of a player’s library.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Myriad\",\"A triggered ability that effectively lets a creature attack in all possible directions.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Surge\",\"A keyword ability that provides an alternative cost to cast a card if you or one of your teammates has cast another spell in the same turn.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Skulk\",\"A keyword ability that restricts how a creature may be blocked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Emerge\",\"A keyword ability that lets a player cast a spell for less by sacrificing a creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Escalate\",\"A keyword ability on some modal spells that adds a cost for choosing additional modes.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Melee\",\"A keyword ability that improves an attacking creature based on the number of opponents you attacked.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Crew\",\"A keyword ability that lets you tap creatures to turn a Vehicle into an artifact creature.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Partner\",\"A keyword ability that lets two legendary creatures or planeswalkers be your commander in the Commander variant rather than one. “Partner with [name]” is a specialized version of the ability that works even outside of the Commander variant to help two cards reach the battlefield together.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Undaunted\",\"A keyword ability that reduces the cost of a spell based on the number of opponents you have.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Improvise\",\"A keyword ability that lets you tap artifacts rather than pay mana to cast a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Aftermath\",\"A keyword ability that lets a player cast one half of a split card only from their graveyard.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Embalm\",\"A keyword ability that lets a player exile a creature card from their graveyard to create a mummified token version of that card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Eternalize\",\"A keyword ability that lets a player exile a creature card from their graveyard to create an eternalized token version of that card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Afflict\",\"A keyword ability that makes the defending player lose life for blocking.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Ascend\",\"A keyword causing a player to get the designation of the city’s blessing once they control ten permanents.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Assist\",\"A keyword ability that lets another player help you pay for a spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Jump-Start\",\"A keyword ability that lets a player cast a card from their graveyard by discarding a card.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Mentor\",\"A keyword ability that lets your bigger creatures power up your smaller creatures when they attack together.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Afterlife\",\"A keyword ability that leaves behind Spirit creature tokens when certain creatures die.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Riot\",\"A keyword ability that lets a player choose whether certain creatures enter the battlefield with haste or with a +1/+1 counter.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Spectacle\",\"A keyword ability that allows certain spells to be cast for an alternative cost if an opponent has lost life.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Escape\",\"A keyword ability that lets a player cast a card from their graveyard.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Companion\",\"A keyword ability that allows a player to choose one creature card from outside the game as a companion if the restriction of that card’s companion ability is met. Once a player has chosen a companion, that player may pay 3<Open> to put it into their hand once during the game.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Mutate\",\"A keyword that lets a creature card be cast as a mutating creature spell.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Encore\",\"A keyword ability that lets a player exile a creature card from their graveyard to, for each opponent, create a token that’s a copy of that card to attack that opponent.\");\r\nINSERT INTO `Keywords`(`Word`,`Description`) VALUES (\"Fabricate\",\"A keyword ability that lets you choose whether to create Servo tokens or put +1/+1 counters on a creature.\");
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../KeywordInsert.txt b/../KeywordInsert.txt
--- a/../KeywordInsert.txt	(revision 612bfc3ff32f7499b871bff2478251cbdea3f36d)
+++ b/../KeywordInsert.txt	(date 1611707430000)
@@ -1,5 +1,5 @@
 INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Deathtouch", "A keyword ability that causes damage dealt by an object to a creature to be enough to destroy it.");
-INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Defender","","A keyword ability that prohibits a creature from attacking.");
+INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Defender","A keyword ability that prohibits a creature from attacking.");
 INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Double Strike","A keyword ability that lets a creature deal both first-strike and regular combat damage.");
 INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Enchant","A keyword ability that defines what an Aura spell can target and what an Aura permanent can be attached to.");
 INSERT INTO `Keywords`(`Word`,`Description`) VALUES ("Equip","A keyword ability that lets a player attach an Equipment to a creature they control.");
Index: manage.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/manage.py b/manage.py
new file mode 100644
--- /dev/null	(date 1613013811355)
+++ b/manage.py	(date 1613013811355)
@@ -0,0 +1,22 @@
+#!/usr/bin/env python
+"""Django's command-line utility for administrative tasks."""
+import os
+import sys
+
+
+def main():
+    """Run administrative tasks."""
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Nenniltoz.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+
+if __name__ == '__main__':
+    main()
Index: User/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/tests.py b/User/tests.py
new file mode 100644
--- /dev/null	(date 1613013907002)
+++ b/User/tests.py	(date 1613013907002)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: User/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/admin.py b/User/admin.py
new file mode 100644
--- /dev/null	(date 1613013907000)
+++ b/User/admin.py	(date 1613013907000)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: User/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/models.py b/User/models.py
new file mode 100644
--- /dev/null	(date 1613013907002)
+++ b/User/models.py	(date 1613013907002)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: User/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/apps.py b/User/apps.py
new file mode 100644
--- /dev/null	(date 1613013907001)
+++ b/User/apps.py	(date 1613013907001)
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class UserConfig(AppConfig):
+    name = 'User'
Index: User/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/views.py b/User/views.py
new file mode 100644
--- /dev/null	(date 1613013907003)
+++ b/User/views.py	(date 1613013907003)
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
Index: Admin/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Admin/tests.py b/Admin/tests.py
new file mode 100644
--- /dev/null	(date 1613013900358)
+++ b/Admin/tests.py	(date 1613013900358)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: Admin/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Admin/admin.py b/Admin/admin.py
new file mode 100644
--- /dev/null	(date 1613013900355)
+++ b/Admin/admin.py	(date 1613013900355)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: Admin/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Admin/models.py b/Admin/models.py
new file mode 100644
--- /dev/null	(date 1613013900357)
+++ b/Admin/models.py	(date 1613013900357)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: Admin/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Admin/apps.py b/Admin/apps.py
new file mode 100644
--- /dev/null	(date 1613013900357)
+++ b/Admin/apps.py	(date 1613013900357)
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class AdminConfig(AppConfig):
+    name = 'Admin'
Index: Admin/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Admin/views.py b/Admin/views.py
new file mode 100644
--- /dev/null	(date 1613014684087)
+++ b/Admin/views.py	(date 1613014684087)
@@ -0,0 +1,7 @@
+from django.shortcuts import render
+from django.http import HttpResponse
+
+
+# Create your views here.
+def index(request):
+    return HttpResponse("Hello, world.")
Index: Nenniltoz/wsgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Nenniltoz/wsgi.py b/Nenniltoz/wsgi.py
new file mode 100644
--- /dev/null	(date 1613013811388)
+++ b/Nenniltoz/wsgi.py	(date 1613013811388)
@@ -0,0 +1,16 @@
+"""
+WSGI config for Nenniltoz project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.1/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Nenniltoz.settings')
+
+application = get_wsgi_application()
Index: Nenniltoz/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Nenniltoz/urls.py b/Nenniltoz/urls.py
new file mode 100644
--- /dev/null	(date 1613014835311)
+++ b/Nenniltoz/urls.py	(date 1613014835311)
@@ -0,0 +1,22 @@
+"""Nenniltoz URL Configuration
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/3.1/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+from django.contrib import admin
+from django.urls import path, include
+
+urlpatterns = [
+    path('Admin/', include('Admin.urls')),
+    path('admin/', admin.site.urls),
+]
Index: Nenniltoz/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Nenniltoz/settings.py b/Nenniltoz/settings.py
new file mode 100644
--- /dev/null	(date 1613013811372)
+++ b/Nenniltoz/settings.py	(date 1613013811372)
@@ -0,0 +1,120 @@
+"""
+Django settings for Nenniltoz project.
+
+Generated by 'django-admin startproject' using Django 3.1.6.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.1/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/3.1/ref/settings/
+"""
+
+from pathlib import Path
+
+# Build paths inside the project like this: BASE_DIR / 'subdir'.
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'r532y05$63nb1bk#v_p$_a_a4v-_bqx#ierh8hxhll6add6rqo'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'Nenniltoz.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'Nenniltoz.wsgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
+}
+
+
+# Password validation
+# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/3.1/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/3.1/howto/static-files/
+
+STATIC_URL = '/static/'
Index: .idea/Nenniltoz.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Nenniltoz.iml b/.idea/Nenniltoz.iml
new file mode 100644
--- /dev/null	(date 1613013976370)
+++ b/.idea/Nenniltoz.iml	(date 1613013976370)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="PyDocumentationSettings">
+    <option name="format" value="PLAIN" />
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
+</module>
\ No newline at end of file
Index: Nenniltoz/asgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Nenniltoz/asgi.py b/Nenniltoz/asgi.py
new file mode 100644
--- /dev/null	(date 1613013811363)
+++ b/Nenniltoz/asgi.py	(date 1613013811363)
@@ -0,0 +1,16 @@
+"""
+ASGI config for Nenniltoz project.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/3.1/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Nenniltoz.settings')
+
+application = get_asgi_application()
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1613013976390)
+++ b/.idea/modules.xml	(date 1613013976390)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Nenniltoz.iml" filepath="$PROJECT_DIR$/.idea/Nenniltoz.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: Collection/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collection/tests.py b/Collection/tests.py
new file mode 100644
--- /dev/null	(date 1613013887516)
+++ b/Collection/tests.py	(date 1613013887516)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1613014684145)
+++ b/.idea/misc.xml	(date 1613014684145)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: Collection/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collection/admin.py b/Collection/admin.py
new file mode 100644
--- /dev/null	(date 1613013887513)
+++ b/Collection/admin.py	(date 1613013887513)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1613013976415)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1613013976415)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: Collection/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collection/models.py b/Collection/models.py
new file mode 100644
--- /dev/null	(date 1613013887515)
+++ b/Collection/models.py	(date 1613013887515)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1613013976424)
+++ b/.idea/vcs.xml	(date 1613013976424)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Collection/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collection/apps.py b/Collection/apps.py
new file mode 100644
--- /dev/null	(date 1613013887515)
+++ b/Collection/apps.py	(date 1613013887515)
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class CollectionConfig(AppConfig):
+    name = 'Collection'
Index: Collection/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Collection/views.py b/Collection/views.py
new file mode 100644
--- /dev/null	(date 1613013887516)
+++ b/Collection/views.py	(date 1613013887516)
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
Index: LifeCounter/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LifeCounter/tests.py b/LifeCounter/tests.py
new file mode 100644
--- /dev/null	(date 1613013876284)
+++ b/LifeCounter/tests.py	(date 1613013876284)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: LifeCounter/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LifeCounter/admin.py b/LifeCounter/admin.py
new file mode 100644
--- /dev/null	(date 1613013876282)
+++ b/LifeCounter/admin.py	(date 1613013876282)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: LifeCounter/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LifeCounter/models.py b/LifeCounter/models.py
new file mode 100644
--- /dev/null	(date 1613013876284)
+++ b/LifeCounter/models.py	(date 1613013876284)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: LifeCounter/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LifeCounter/apps.py b/LifeCounter/apps.py
new file mode 100644
--- /dev/null	(date 1613013876283)
+++ b/LifeCounter/apps.py	(date 1613013876283)
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class LifecounterConfig(AppConfig):
+    name = 'LifeCounter'
diff --git a/LifeCounter/migrations/__init__.py b/LifeCounter/migrations/__init__.py
new file mode 100644
diff --git a/Admin/urls.py b/Admin/urls.py
new file mode 100644
diff --git a/User/__init__.py b/User/__init__.py
new file mode 100644
diff --git a/User/migrations/__init__.py b/User/migrations/__init__.py
new file mode 100644
diff --git a/Admin/__init__.py b/Admin/__init__.py
new file mode 100644
diff --git a/Admin/migrations/__init__.py b/Admin/migrations/__init__.py
new file mode 100644
diff --git a/Nenniltoz/__init__.py b/Nenniltoz/__init__.py
new file mode 100644
diff --git a/Collection/__init__.py b/Collection/__init__.py
new file mode 100644
diff --git a/Collection/migrations/__init__.py b/Collection/migrations/__init__.py
new file mode 100644
diff --git a/LifeCounter/__init__.py b/LifeCounter/__init__.py
new file mode 100644
